services:
  # Serviço WEB permanece rodando sempre, pois serve a página
  web:
    build: ./web
    ports:
      - "5000:5000"
    depends_on:
      - grafana
    volumes:
      - ./web:/app
      - dados_compartilhados:/app/dados
    command: python app.py
    restart: unless-stopped

  # Jenkins roda permanentemente e executa os outros como jobs temporários
  jenkins:
    build: ./jenkins
    ports:
      - "8090:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins_home:/var/jenkins_home
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  # Grafana para monitoramento
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    restart: unless-stopped

  # Prometheus para métricas
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: unless-stopped

  # cAdvisor para monitorar containers
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped

# Esses três não devem ficar rodando sempre: Jenkins os executa com "run --rm"
# Ainda assim, mantenha o build configurado para Jenkins usar.

  gerador:
    build: ./gerador
    volumes:
      - ./dados:/app/dados
      - dados_compartilhados:/app/dados
    command: python gerador.py
    restart: "no"  # Não precisa subir automaticamente

  tratamento:
    build: ./tratamento
    volumes:
      - ./dados:/app/dados
      - dados_compartilhados:/app/dados
    command: Rscript tratamento.R
    restart: "no"

  analise:
    build: ./analise
    volumes:
      - ./dados:/app/dados
      - dados_compartilhados:/app/dados
    command: python graficos.py
    restart: "no"

volumes:
  jenkins_home:
  dados_compartilhados: